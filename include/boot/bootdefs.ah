;-------------------------------------------------------------------------------
;  bootdefs.ah - constants and variables used by kernel loader.
;-------------------------------------------------------------------------------

; --- Loader variables ---

%define	LoaderServiceEntryPoint	700h		; Loader services (print, etc)
%define	KernelCodeSect		704h		; Kernel .text section start
%define	KernelDataSect		708h		; Kernel .data section start
%define	KernelBSSsect		70Ch		; Kernel .bss section start
%define DrvHlpTableAddr		710h		; Driver helpers table
%define	UserAPIsTableAddr	714h		; User APIs table
%define	KernelFreeMemStart	718h		; Begin of free kernel memory
%define	KernelFreeMemEnd	71Ch		; End of free kernel memory
%define	LowerMemSizeKB		720h		; Size of lower memory in KB
%define	UpperMemSizeKB		724h		; Size of upper memory in KB
%define BootModulesCount	728h		; Number of loaded boot modules
%define BootModulesListAddr	72Ch		; Address of boot modules list
%define BootModulesCmdLines	730h		; Boot modules commandline buf.
%define	BIOSMemMapAddr		734h		; BIOS memory map address
%define	BIOSMemMapSize		738h		; BIOS memory map size


; --- Routines accessible through loader service entry ---

; Function numbers
%define	SERVPROC_PRINTCHARRAW	0
%define	SERVPROC_PRINTCHAR	1
%define	SERVPROC_PRINTSTR	2
%define	SERVPROC_PRINTSTRPAD	3
%define	SERVPROC_PRINT32H	4
%define	SERVPROC_PRINT16H	5
%define	SERVPROC_PRINT8H	6
%define	SERVPROC_PRINTDEC	7
%define	SERVPROC_READKEY	8

%macro mServPrintCharRaw 0-1
%if %0==1
	mov	al,%1
%endif
	push	byte SERVPROC_PRINTCHARRAW
	call	dword [LoaderServiceEntryPoint]
%endmacro

%macro mServPrintChar 0-1
%if %0==1
	mov	al,%1
%endif
	push	byte SERVPROC_PRINTCHAR
	call	dword [LoaderServiceEntryPoint]
%endmacro

%macro mServPrintStr 0-1
%if %0 == 1
	mov	esi,%1
%endif
	push	byte SERVPROC_PRINTSTR
	call	dword [LoaderServiceEntryPoint]
%endmacro

%macro mServPrintStrPad 0-2
	push	ecx
%if %0>=1
	mov	esi,%1
%ifnum %2
	mov	cl,%2
%else
	xor	cl,cl
%endif
%endif
	push	byte SERVPROC_PRINTSTRPAD
	call	dword [LoaderServiceEntryPoint]
	pop	ecx
%endmacro

%macro mServPrint8h 0-1
%if %0==1
	mov	al,%1
%endif
	push	byte SERVPROC_PRINT8H
	call	dword [LoaderServiceEntryPoint]
%endmacro

%macro mServPrint16h 0-1
%if %0==1
	mov	ax,%1
%endif
	push	byte SERVPROC_PRINT8H
	call	dword [LoaderServiceEntryPoint]
%endmacro

%macro mServPrint32h 0-1
%if %0==1
	mov	eax,%1
%endif
	push	byte SERVPROC_PRINT32H
	call	dword [LoaderServiceEntryPoint]
%endmacro

%macro mServPrintDec 0-1
%if %0==1
	mov	eax,%1
%endif
	push	byte SERVPROC_PRINTDEC
	call	dword [LoaderServiceEntryPoint]
%endmacro

%macro mServReadKey 0
	push	byte SERVPROC_READKEY
	call	dword [LoaderServiceEntryPoint]
%endmacro
