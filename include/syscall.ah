;-------------------------------------------------------------------------------
; syscall.ah - system call definitions.
;-------------------------------------------------------------------------------

%ifndef _syscall_ah
%define _syscall_ah

; Syscall numbers
S_traceevent		EQU	1
S_Ring0			EQU	2
S_MsgSendv		EQU	0Bh
S_MsgSendvnc		EQU	0Ch
S_MsgError		EQU	0Dh
S_MsgReceivev		EQU	0Eh
S_MsgReplyv		EQU	0Fh
S_MsgReadv		EQU	10h
S_MsgWritev		EQU	11h
S_MsgInfo		EQU	13h
S_MsgSendPulse		EQU	14h
S_MsgDeliverEvent	EQU	15h
S_MsgKeyData		EQU	16h
S_MsgReadiov		EQU	17h
S_MsgReceivePulsev	EQU	18h
S_MsgVerifyEvent	EQU	19h
S_SignalKill		EQU	1Ah
S_SignalReturn		EQU	1Bh
S_SignalFault		EQU	1Ch
S_SignalAction		EQU	1Dh
S_SignalProcmask	EQU	1Eh
S_SignalSuspend		EQU	1Fh
S_SignalWaitinfo	EQU	20h
S_ChannelCreate		EQU	23h
S_ChannelDestroy	EQU	24h
S_ConnectAttach		EQU	27h
S_ConnectDetach		EQU	28h
S_ConnectServerInfo	EQU	29h
S_ConnectClientInfo	EQU	2Ah
S_ConnectFlags		EQU	2Bh
S_ThreadCreate		EQU	2Eh
S_ThreadDestroy		EQU	2Fh
S_ThreadDetach		EQU	31h
S_ThreadJoin		EQU	32h
S_ThreadCancel		EQU	33h
S_ThreadCtl		EQU	34h
S_InterruptAttach	EQU	37h
S_InterruptDetachFunc	EQU	38h
S_InterruptDetach	EQU	39h
S_InterruptWait		EQU	3Ah
S_ClockTime		EQU	41h
S_ClockAdjust		EQU	42h
S_ClockPeriod		EQU	43h
S_ClockId		EQU	44h
S_TimerCreate		EQU	46h
S_TimerDestroy		EQU	47h
S_TimerSettime		EQU	48h
S_TimerInfo		EQU	49h
S_TimerAlarm		EQU	4Ah
S_TimerTimeout		EQU	4bh
S_SyncTypeCreate	EQU	4Eh
S_SyncDestroy		EQU	4Fh
S_SyncMutexLock		EQU	50h
S_SyncMutexUnlock	EQU	51h
S_SyncCondvarWait	EQU	52h
S_SyncCondvarSignal	EQU	53h
S_SyncSemPost		EQU	54h
S_SyncSemWait		EQU	55h
S_SyncCtl		EQU	56h
S_SyncMutexRevive	EQU	57h
S_SchedGet		EQU	58h
S_SchedSet		EQU	59h
S_SchedYield		EQU	5Ah
S_SchedInfo		EQU	5Bh

; Syscall trap
%define	SYSCALL_TRAP	38h

; Macro for performing a system call.
%macro mDoSyscall 1
	mov	eax,%1
%ifdef USE_SYSENTER
	; Use fast call via SYSENTER
	mov	edx,%%1
	mov	ecx,esp
	sysenter
%%1:
%else
	; Do it in old-fashioned way
	int	SYSCALL_TRAP
%endif
%endmacro

%endif
